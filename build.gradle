plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.jojoldu.book'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 웹 애플리케이션 개발을 위한 기본 웹 관련 스타터 (Spring MVC 포함)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot에서 웹 서비스(WSDL, SOAP) 개발을 지원하는 스타터
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    // Spring Boot에서 기본적인 테스트 환경을 제공하는 스타터 (JUnit 포함)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JUnit 플랫폼에서 테스트 실행을 위한 런처
    testImplementation 'org.junit.platform:junit-platform-launcher'

    // Lombok: Getter, Setter, 생성자 자동 생성 등 코드 간소화를 위한 라이브러리
    implementation 'org.projectlombok:lombok'

    // Lombok을 사용할 때, 컴파일 시 자동으로 애너테이션을 처리하도록 설정
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 코드에서도 Lombok 사용 가능하도록 설정
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // JSON 응답 검증을 위한 JSONPath 라이브러리
    testImplementation 'com.jayway.jsonpath:json-path:2.9.0'

    // 테스트 시 가독성이 뛰어난 assertions을 제공하는 AssertJ 라이브러리
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // JPA (Java Persistence API) 사용을 위한 Spring Data JPA 스타터
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 인메모리 데이터베이스 H2 (테스트 및 로컬 개발 환경에서 사용 가능)
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session-jdbc'
    testImplementation 'org.springframework.security:spring-security-test'
}


tasks.named('test') {
    useJUnitPlatform()
    //jvmArgs '-Xshare:off'
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
